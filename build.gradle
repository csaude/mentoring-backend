plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.7"
}

version = "1.2.5"
group = "mz.org.fgh"

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': 'mz.org.fgh.Application'
    }
}

shadowJar {
    mergeServiceFiles()
}

dependencies {
    // Annotation Processors
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("ch.qos.logback:logback-classic")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    // Implementation Dependencies
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("io.swagger.core.v3:swagger-annotations:2.1.11")
    implementation("io.swagger.core.v3:swagger-models:2.1.11")
    implementation("io.swagger.core.v3:swagger-integration:2.1.11")
    implementation("io.swagger.core.v3:swagger-jaxrs2:2.1.11")
    implementation("io.swagger.core.v3:swagger-core:2.1.11")


    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.reactivex.rxjava2:rxjava:2.2.21")
    implementation("com.sun.mail:jakarta.mail:1.6.7")
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'commons-io:commons-io:2.11.0'
    implementation("org.yaml:snakeyaml:1.33")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2")

    // Runtime Only Dependencies
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    runtimeOnly("org.yaml:snakeyaml")

    // Compile Only Dependencies
    compileOnly("org.projectlombok:lombok")

    testImplementation("org.mockito:mockito-core:4.11.0")  // Add Mockito core
    testImplementation("org.mockito:mockito-junit-jupiter:4.11.0")  // Add Mockito JUnit 5 integration
    testImplementation("io.micronaut:micronaut-http-client") // Ensure HttpClient for tests is included

}

tasks.register('nativeImage', Exec) {
    dependsOn build
    executable = 'native-image'
    args('-jar', "${project.buildDir}/libs/${project.name}-${project.version}.jar")
}

application {
    mainClass.set("mz.org.fgh.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative {
    toolchainDetection = false
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("mz.org.fgh.*")
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}
